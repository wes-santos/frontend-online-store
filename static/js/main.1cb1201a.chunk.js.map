{"version":3,"sources":["services/api.js","components/Categories.js","components/AddButton.js","components/ProductCard.js","components/Home.js","components/ItemsAdd.js","components/Cart.js","components/ProductDetails.js","App.js","serviceWorker.js","index.js"],"names":["getCategories","fetch","response","json","data","getProductsFromQuery","query","url","getProductsDetails","productID","getProductsFromCategory","categoryId","Categories","state","categories","fetchCategories","setState","this","onClicked","props","map","category","id","categoryName","name","key","htmlFor","data-testid","type","onClick","React","Component","AddButton","productid","productName","productImage","productPrice","addProductToCart","testid","qtd","ProductCard","className","to","src","alt","Home","countProducts","prev","counterProducts","productInfo","newCartList","prevState","cartData","cartList","alreadyExisted","findIndex","product","localStorage","setItem","JSON","stringify","handleChange","target","value","handleClick","clickedCategory","results","renderSelectedCategoryProducts","length","specificProduct","newStr","thumbnail","replace","title","price","searchProduct","bind","productUserSearch","productList","searchDone","event","preventDefault","productsReturned","icon","faCartShopping","onSubmit","placeholder","onChange","ItemsAdd","itemAdd","handleQuantity","Cart","getStorageData","cartStorage","localStorageItems","getItem","parse","indexProduct","splice","ProductDetails","getProductsFromLocalStorage","counter","defineCounter","newCartItems","cartItems","getProductDetails","productDetailInfo","match","params","productId","ProductInfo","attributes","item","value_name","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1cb1201a.chunk.js","sourcesContent":["export async function getCategories() {\n  try {\n    const url = 'https://api.mercadolibre.com/sites/MLB/categories';\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) { return error; }\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  try {\n    const url = `https://api.mercadolibre.com/sites/MLB/search?q=${categoryId}&${query}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) { return error; }\n}\n\nexport async function getProductsFromQuery(query) {\n  try {\n    const url = `https://api.mercadolibre.com/sites/MLB/search?q=${query}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) { return error; }\n}\n\nexport async function getProductsDetails(productID) {\n  try {\n    const url = `https://api.mercadolibre.com/items/${productID}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) { return error; }\n}\n\nexport async function getProductsFromCategory(categoryId) {\n  try {\n    const url = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) { return error; }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\n\nclass Categories extends React.Component {\n  state = {\n    categories: [],\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n  }\n\n  fetchCategories = async () => {\n    const response = await getCategories();\n    this.setState({ categories: response });\n  }\n\n  render() {\n    const { categories } = this.state;\n    const { onClicked } = this.props;\n    return (\n      categories.map((category) => {\n        const { id: categoryId, name: categoryName } = category;\n        return (\n          <div key={ categoryId }>\n            <label\n              htmlFor={ categoryId }\n              data-testid=\"category\"\n            >\n              <input\n                type=\"radio\"\n                id={ categoryId }\n                name=\"category\"\n                onClick={ () => onClicked(categoryId) }\n              />\n              { categoryName }\n            </label>\n          </div>\n        );\n      })\n    );\n  }\n}\n\nCategories.propTypes = {\n  onClicked: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddButton extends Component {\n  render() {\n    const { productid,\n      productName,\n      productImage,\n      productPrice,\n      addProductToCart,\n      testid } = this.props;\n    return (\n      <div>\n        <button\n          data-testid={ testid }\n          type=\"button\"\n          onClick={ () => addProductToCart({ productid,\n            productName,\n            productImage,\n            productPrice,\n            qtd: 1 }) }\n          productid={ productid }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nAddButton.propTypes = {\n  productName: PropTypes.string.isRequired,\n  productImage: PropTypes.string.isRequired,\n  productPrice: PropTypes.number.isRequired,\n  addProductToCart: PropTypes.func.isRequired,\n  productid: PropTypes.string.isRequired,\n  testid: PropTypes.string.isRequired,\n};\n\nexport default AddButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AddButton from './AddButton';\n\nclass ProductCard extends React.Component {\n  render() {\n    const { productid,\n      productName,\n      productImage,\n      productPrice,\n      addProductToCart,\n    } = this.props;\n    return (\n      <div className=\"product\" data-testid=\"product\">\n        <Link\n          to={ `/productDetails/${productid}` }\n          data-testid=\"product-detail-link\"\n        >\n          <h2>{ productName }</h2>\n        </Link>\n        <img src={ productImage } alt=\"Imagem Indisponível\" />\n        <h3>\n          {`R$ ${productPrice}`}\n        </h3>\n        <AddButton\n          productid={ productid }\n          productName={ productName }\n          productImage={ productImage }\n          productPrice={ productPrice }\n          addProductToCart={ addProductToCart }\n          testid=\"product-add-to-cart\"\n        />\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  productName: PropTypes.string.isRequired,\n  productImage: PropTypes.string.isRequired,\n  productPrice: PropTypes.number.isRequired,\n  productid: PropTypes.string.isRequired,\n  addProductToCart: PropTypes.func.isRequired,\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCartShopping } from '@fortawesome/free-solid-svg-icons';\nimport Categories from './Categories';\nimport ProductCard from './ProductCard';\nimport { getProductsFromQuery, getProductsFromCategory } from '../services/api';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.searchProduct = this.searchProduct.bind(this);\n    this.state = {\n      productUserSearch: '',\n      productList: [],\n      searchDone: false,\n      clickedCategory: [],\n      counterProducts: 0,\n      cartList: [],\n    };\n  }\n\n  countProducts = () => {\n    this.setState((prev) => ({\n      counterProducts: prev.counterProducts + 1,\n    }));\n  }\n\n  addProductToCart = (productInfo) => {\n    let newCartList = [];\n    const prevState = this.state;\n    const cartData = [...prevState.cartList];\n    const alreadyExisted = ((cartData).findIndex((product) => (\n      (product.productid === productInfo.productid))));\n    if (alreadyExisted < 0) {\n      newCartList = [...prevState.cartList, productInfo];\n    } else {\n      cartData[alreadyExisted].qtd += 1;\n      newCartList = [...cartData];\n    }\n    this.setState(() => ({\n      cartList: newCartList,\n    }), () => {\n      const { cartList } = this.state;\n      this.countProducts();\n      localStorage.setItem('cartItems', JSON.stringify(cartList));\n    });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState(() => ({\n      [name]: value,\n    }));\n  }\n\n  handleClick = async (categoryId) => {\n    const response = await getProductsFromCategory(categoryId);\n    this.setState({ clickedCategory: response.results });\n  }\n\n  renderSelectedCategoryProducts = (clickedCategory) => (\n    clickedCategory.length !== 0\n      ? (\n        <div className=\"product-wrapper\">\n          {clickedCategory.map((specificProduct) => {\n            const newStr = specificProduct.thumbnail.replace('-I.jpg', '-W.webp');\n            return (<ProductCard\n              key={ specificProduct.id }\n              productid={ specificProduct.id }\n              productName={ specificProduct.title }\n              productImage={ newStr }\n              productPrice={ specificProduct.price }\n              addProductToCart={ this.addProductToCart }\n            />);\n          })}\n        </div>)\n      : ''\n  );\n\n  async searchProduct(event) {\n    event.preventDefault();\n    const { productUserSearch } = this.state;\n    const productsReturned = await getProductsFromQuery(productUserSearch);\n    this.setState(() => ({\n      productList: productsReturned.results,\n      searchDone: true,\n    }));\n  }\n\n  render() {\n    const { productList,\n      searchDone,\n      counterProducts,\n      clickedCategory } = this.state;\n    return (\n      <div>\n        <div className=\"header\">\n          <div className=\"cart-wrapper\">\n            {\n            /*\n            Consulta para implementação do Font Awesome:\n            https://stackoverflow.com/questions/23116591/how-to-include-a-font-awesome-icon-in-reacts-render#:~:text=import%20%7B%20library%20%7D%20from%20'%40,recommend%20importing%20this%20in%20App.\n            */\n            }\n            <FontAwesomeIcon icon={ faCartShopping } />\n            <Link\n              to=\"/cart\"\n              data-testid=\"shopping-cart-button\"\n            >\n              Carrinho de Compras\n            </Link>\n          </div>\n          <span>\n            {`Produtos no carrinho: ${counterProducts}`}\n          </span>\n        </div>\n        <div className=\"main-info-wrapper\">\n          <form onSubmit={ this.searchProduct }>\n            <div className=\"search-wrapper\">\n              <input\n                data-testid=\"query-input\"\n                id=\"home-initial-message\"\n                name=\"productUserSearch\"\n                placeholder=\"Buscar\"\n                type=\"text\"\n                onChange={ this.handleChange }\n              />\n              <button\n                data-testid=\"query-button\"\n                name=\"productUserSearch\"\n                type=\"submit\"\n              >\n                Pesquisar\n              </button>\n            </div>\n            <h3 className=\"search-text\" data-testid=\"home-initial-message\">\n              Digite algum termo de pesquisa ou escolha uma categoria.\n            </h3>\n            {\n              searchDone\n                ? (\n                  <div className=\"product-wrapper\">\n                    {productList.map((product) => {\n                      // Método replace aprendido em:\n                      // https://ricardo-reis.medium.com/string-replace-para-substituir-substrings-no-javascript-6db625e5fbc5#:~:text=Use%20o%20m%C3%A9todo%20replace(),uma%20substring%20por%20uma%20nova.\n                      const newStr = product.thumbnail.replace('-I.jpg', '-W.webp');\n                      return (<ProductCard\n                        key={ product.id }\n                        productName={ product.title }\n                        productImage={ newStr }\n                        productPrice={ product.price }\n                        productid={ product.id }\n                        addProductToCart={ this.addProductToCart }\n                      />);\n                    })}\n                  </div>)\n                : this.renderSelectedCategoryProducts(clickedCategory)\n            }\n          </form>\n          <div className=\"categories-wrapper\">\n            <Categories\n              onClicked={ this.handleClick }\n              clickedCategory={ clickedCategory }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ItemsAdd extends Component {\n  render() {\n    const {\n      productName,\n      productImage,\n      productPrice,\n      itemAdd,\n      productid,\n      handleQuantity } = this.props;\n    return (\n      <div>\n        <p data-testid=\"shopping-cart-product-name\">{productName}</p>\n        <img src={ productImage } alt=\"Imagem Indisponível\" />\n        <p>{productPrice}</p>\n        <p data-testid=\"shopping-cart-product-quantity\">{ itemAdd }</p>\n        <button\n          data-testid=\"product-decrease-quantity\"\n          name={ productid }\n          onClick={ handleQuantity }\n          value=\"-\"\n          type=\"button\"\n        >\n          -\n        </button>\n        <button\n          data-testid=\"product-increase-quantity\"\n          name={ productid }\n          onClick={ handleQuantity }\n          value=\"+\"\n          type=\"button\"\n        >\n          +\n        </button>\n        <button\n          name={ productid }\n          type=\"button\"\n          value=\"remove\"\n          onClick={ handleQuantity }\n        >\n          X\n        </button>\n      </div>\n    );\n  }\n}\n\nItemsAdd.propTypes = {\n  productName: PropTypes.string.isRequired,\n  handleQuantity: PropTypes.func.isRequired,\n  productid: PropTypes.string.isRequired,\n  productPrice: PropTypes.number.isRequired,\n  productImage: PropTypes.string.isRequired,\n  itemAdd: PropTypes.number.isRequired,\n};\n\nexport default ItemsAdd;\n","import React from 'react';\nimport ItemsAdd from './ItemsAdd';\n\nclass Cart extends React.Component {\n  constructor() {\n    super();\n    this.handleQuantity = this.handleQuantity.bind(this);\n    this.getStorageData = this.getStorageData.bind(this);\n    this.state = {\n      cartStorage: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getStorageData();\n  }\n\n  handleQuantity({ target }) {\n    const localStorageItems = localStorage.getItem('cartItems');\n    const results = JSON.parse(localStorageItems);\n    const { value, name } = target;\n    const indexProduct = (results.findIndex((product) => (product.productid === name)));\n    if (value === '+') {\n      results[indexProduct].qtd += 1;\n    } else if (value === '-') {\n      results[indexProduct].qtd -= 1;\n    } else {\n      results.splice(indexProduct, 1);\n    }\n    localStorage.setItem('cartItems', JSON.stringify(results));\n    this.getStorageData();\n  }\n\n  getStorageData() {\n    const localStorageItems = localStorage.getItem('cartItems');\n    const results = JSON.parse(localStorageItems);\n    this.setState({ cartStorage: results });\n  }\n\n  render() {\n    const { cartStorage } = this.state;\n    return (\n      cartStorage ? (\n        <div>\n          {cartStorage\n            .map(({ productid, productName, productImage, productPrice, qtd }) => (\n              <ItemsAdd\n                key={ productid }\n                productid={ productid }\n                productName={ productName }\n                productPrice={ productPrice }\n                productImage={ productImage }\n                itemAdd={ qtd }\n                handleQuantity={ this.handleQuantity }\n              />\n            ))}\n        </div>\n      ) : <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n    );\n  }\n}\n\nexport default Cart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getProductsDetails } from '../services/api';\nimport AddButton from './AddButton';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.getProductDetails = this.getProductDetails.bind(this);\n    this.state = {\n      productDetailInfo: [],\n      searchDone: false,\n      cartItems: this.getProductsFromLocalStorage(),\n      counter: this.defineCounter(),\n    };\n  }\n\n  componentDidMount() {\n    this.getProductDetails();\n  }\n\n  async getProductDetails() {\n    const { match } = this.props;\n    const { params } = match;\n    const { productId } = params;\n    const ProductInfo = await getProductsDetails(productId);\n    this.setState(() => ({\n      productDetailInfo: ProductInfo,\n      searchDone: true,\n    }));\n  }\n\n  getProductsFromLocalStorage = () => {\n    if (localStorage.getItem('cartItems')) {\n      const localStorageItems = localStorage.getItem('cartItems');\n      const results = JSON.parse(localStorageItems);\n      return results;\n    }\n    return [];\n  }\n\n  countProducts = () => {\n    this.setState((prev) => ({\n      counter: prev.counter + 1,\n    }));\n  }\n\n  defineCounter = () => {\n    if (localStorage.getItem('cartItems')) {\n      const localStorageItems = localStorage.getItem('cartItems');\n      const results = JSON.parse(localStorageItems);\n      return results.length;\n    }\n    return 0;\n  }\n\n  addProductToCart = (productInfo) => {\n    let newCartItems = [];\n    const prevState = this.state;\n    const cartData = [...prevState.cartItems];\n    const alreadyExisted = (\n      (cartData).findIndex((product) => ((product.productid === productInfo.productid)\n      )));\n    if (alreadyExisted < 0) {\n      newCartItems = [...prevState.cartItems, productInfo];\n    } else {\n      cartData[alreadyExisted].qtd += 1;\n      newCartItems = [...cartData];\n    }\n    this.setState(() => ({\n      cartItems: newCartItems,\n    }), () => {\n      const { cartItems } = this.state;\n      this.countProducts();\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    });\n  }\n\n  render() {\n    const { productDetailInfo, searchDone, counter } = this.state;\n    const { price, thumbnail, title, attributes, id } = productDetailInfo;\n    return (\n      <div>\n        <Link\n          to=\"/cart\"\n          data-testid=\"shopping-cart-button\"\n        >\n          Carrinho de Compras\n        </Link>\n        <span>{counter}</span>\n        { searchDone\n        && (\n          <div>\n            <p data-testid=\"product-detail-name\">{title}</p>\n            <p>{price}</p>\n            <p>Especificações Técnicas</p>\n            <img src={ thumbnail } alt=\"Imagem Indisponível\" />\n            {attributes.map((item) => (\n              <div className=\"productDetails\" key={ item.name }>\n                <p>{item.name}</p>\n                <p>{item.value_name}</p>\n              </div>\n            ))}\n            <AddButton\n              productid={ id }\n              productName={ title }\n              productImage={ thumbnail }\n              productPrice={ price }\n              addProductToCart={ this.addProductToCart }\n              testid=\"product-detail-add-to-cart\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom/cjs/react-router-dom.min';\nimport { Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\nimport ProductDetails from './components/ProductDetails';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/cart\" component={Cart} />\n            <Route exact path=\"/productDetails/:productId\" component={ProductDetails} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}